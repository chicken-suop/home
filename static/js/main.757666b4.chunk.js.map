{"version":3,"sources":["assets/images/ratskin.svg","assets/fonts/Aileron/Aileron-Regular.otf","assets/fonts/Big John Slim Joe/BIG JOHN.otf","assets/fonts/Finland/Finland Rounded Thin.otf","helpers/styledComponentsConfig.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","sizes","desktop","tablet","phone","media","Object","keys","reduce","acc","label","css","_templateObject","apply","arguments","Detail","alert","react_default","a","createElement","Container","Page","Background","src","ratskin","alt","LeftPart","RightPart","Inner","Title","LinksContainer","StyledLink","LeftPaddingPart","RightPaddingPart","PageTitle","React","Component","styled","div","Home_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","h1","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","h2","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","App","Fragment","Route","path","component","Home","exact","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","src_templateObject","aileronRegular","bigJohn","finlandRoundedThin","ReactDOM","render","BrowserRouter","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yVCEjC,IAMMC,EAAQ,CACnBC,QAAS,IACTC,OAAQ,IACRC,MAAO,KAIIC,EAAQC,OAAOC,KAAKN,GAAOO,OAAO,SAACC,EAAKC,GAOnD,OANAD,EAAIC,GAAS,kBAAaC,YAAbC,IACUX,EAAMS,GAAS,GAChCC,IAAGE,WAAH,EAAAC,aAICL,GACN,ovFClBkBM,mLAGjB,OADAC,MAAM,gDAEJC,EAAAC,EAAAC,cAACC,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAD,KACEJ,EAAAC,EAAAC,cAACG,EAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKI,IAAKC,IAASC,IAAI,8BACvBR,EAAAC,EAAAC,cAACO,EAAD,MACAT,EAAAC,EAAAC,cAACQ,EAAD,OAEFV,EAAAC,EAAAC,cAACS,EAAD,KACEX,EAAAC,EAAAC,cAACU,EAAD,cAAaZ,EAAAC,EAAAC,cAAA,WAAb,SACAF,EAAAC,EAAAC,cAACW,EAAD,KACEb,EAAAC,EAAAC,cAACY,EAAD,aACAd,EAAAC,EAAAC,cAACY,EAAD,cACAd,EAAAC,EAAAC,cAACY,EAAD,kBAINd,EAAAC,EAAAC,cAACE,EAAD,KACEJ,EAAAC,EAAAC,cAACG,EAAD,KACEL,EAAAC,EAAAC,cAACa,EAAD,kHAEEf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAHF,mDAMAF,EAAAC,EAAAC,cAACc,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAD,6BA7BsBC,IAAMC,WAsCpChB,EAAYiB,IAAOC,IAAVC,KAETlB,EAAOgB,IAAOC,IAAVE,KAKJZ,EAAQS,IAAOC,IAAVG,KAaLnB,EAAae,IAAOC,IAAVI,KAkBVhB,EAAWW,IAAOC,IAAVK,KAORhB,EAAYU,YAAOX,EAAPW,CAAHO,KAITZ,EAAkBK,YAAOX,EAAPW,CAAHQ,KAYfZ,EAAmBI,YAAOV,EAAPU,CAAHS,KAShBjB,EAAQQ,IAAOU,GAAVC,IAMP3C,EAAMF,OANC8C,KAOP5C,EAAMD,MAPC8C,MAULpB,EAAiBO,IAAOC,IAAVa,IAChB9C,EAAMD,MADUgD,MAIdrB,EAAaM,IAAOgB,GAAVC,IAQZjD,EAAMF,OARMoD,KASZlD,EAAMD,MATMoD,KAUZnD,EAAMD,MAVMqD,KAWZpD,EAAMD,MAXMsD,MAcVxB,EAAYG,IAAOU,GAAVY,KCrHAC,mLAjBX,OACE3C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2C,SAAA,KACE5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CACEC,KAAK,IACLC,UAAWC,EACXC,OAAK,YAPG9B,aCOE+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,0fCPN,IAAMC,GAAcC,YAAHC,KACDC,KACAC,KACAC,MAgBhBC,IAASC,OACP9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAeC,SAAUC,SACvBjE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2C,SAAA,KACE5C,EAAAC,EAAAC,cAACgE,EAAD,MACAlE,EAAAC,EAAAC,cAACqD,GAAD,QAGJY,SAASC,eAAe,SD4FpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.757666b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ratskin.4d02ec3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Aileron-Regular.d321fa78.otf\";","module.exports = __webpack_public_path__ + \"static/media/BIG JOHN.aa3a0087.otf\";","module.exports = __webpack_public_path__ + \"static/media/Finland Rounded Thin.68077ca3.otf\";","import { css } from 'styled-components';\n\nexport const theme = {\n  boxShadow: '0 10px 40px rgba(0, 0, 0, 0.2)',\n  color: 'rgba(0, 0, 0, 0.87)',\n  whiteColor: 'rgba(255, 255, 255, 0.87)',\n};\n\nexport const sizes = {\n  desktop: 992,\n  tablet: 768,\n  phone: 576,\n}\n\n// Iterate through the sizes and create a media template\nexport const media = Object.keys(sizes).reduce((acc, label) => {\n  acc[label] = (...args) => css`\n    @media (max-width: ${sizes[label] / 16}em) {\n      ${css(...args)}\n    }\n  `\n\n  return acc\n}, {})\n","import React from 'react';\nimport styled from 'styled-components';\nimport { theme, sizes, media } from '../helpers/styledComponentsConfig';\nimport ratskin from '../assets/images/ratskin.svg';\n\nexport default class Detail extends React.Component {\n  render() {\n    alert(\"ðŸš§ Under developement ðŸš§\")\n    return (\n      <Container>\n        <Page>\n          <Background>\n            <img src={ratskin} alt=\"Ratskin graphic left half\" />\n            <LeftPart />\n            <RightPart />\n          </Background>\n          <Inner>\n            <Title>Elliot<br />Schep</Title>\n            <LinksContainer>\n              <StyledLink>work</StyledLink>\n              <StyledLink>about</StyledLink>\n              <StyledLink>resume</StyledLink>\n            </LinksContainer>\n          </Inner>\n        </Page>\n        <Page>\n          <Background>\n            <LeftPaddingPart>\n              Full-stack developer with interests in design & art, computer networking and sound recording/reproduction.\n              <br />\n              <br />\n              Iâ€™m an independent, self-directed learner.\n            </LeftPaddingPart>\n            <RightPaddingPart>\n              <PageTitle>About me.</PageTitle>\n            </RightPaddingPart>\n          </Background>\n        </Page>\n      </Container>\n    );\n  }\n}\n\nconst Container = styled.div``;\n\nconst Page = styled.div`\n  height: 100vh;\n  position: relative;\n`;\n\nconst Inner = styled.div`\n  position: relative;\n  padding: 50px 0 150px;\n  width: 83.33333%;\n  margin: 0 auto;\n  min-height: calc(100vh - 200px);\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: flex-start;\n`\n\nconst Background = styled.div`\n  height: 100vh;\n  width: 100vw;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  img {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n\nconst LeftPart = styled.div`\n  width: 50%;\n  height: 100%;\n  display: inline-block;\n  background-color: #E1605F;\n`;\n\nconst RightPart = styled(LeftPart)`\n  background-color: #DFDFDF;\n`;\n\nconst LeftPaddingPart = styled(LeftPart)`\n  float: left;\n  padding: 30px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: #DFDFDF;\n  font-size: 2rem;\n  background-color: #020B3C;\n`;\n\nconst RightPaddingPart = styled(RightPart)`\n  float: right;\n  padding: 30px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  font-family: 'Big John';\n  margin: 0;\n  font-weight: normal;\n  color: #020B3C;\n  font-size: 5rem;\n  ${media.tablet`font-size: 4rem;`}\n  ${media.phone`font-size: 3rem;`}\n`;\n\nconst LinksContainer = styled.div`\n  ${media.phone`text-align: right;`}\n`;\n\nconst StyledLink = styled.h2`\n  font-family: 'Finland Rounded';\n  margin: 0;\n  font-weight: normal;\n  color: #020B3C;\n  display: inline-block;\n  padding: 0 20px;\n  font-size: 5rem;\n  ${media.tablet`font-size: 4rem;`}\n  ${media.phone`font-size: 4rem;`}\n  ${media.phone`padding: 10px 0;`}\n  ${media.phone`display: block;`}\n`;\n\nconst PageTitle = styled.h1`\n  color: #020B3C;\n  font-size: 8rem;\n`\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport Home from './pages/Home';\n// import About from './pages/About';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Route\n          path=\"/\"\n          component={Home}\n          exact\n        />\n        {/* <Route\n          path=\"/about\"\n          component={About}\n          exact\n        /> */}\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createGlobalStyle } from 'styled-components';\nimport { BrowserRouter } from 'react-router-dom';\nimport aileronRegular from './assets/fonts/Aileron/Aileron-Regular.otf';\nimport bigJohn from './assets/fonts/Big John Slim Joe/BIG JOHN.otf';\nimport finlandRoundedThin from './assets/fonts/Finland/Finland Rounded Thin.otf';\n\n// Inject global styles\nconst GlobalStyle = createGlobalStyle`\n  @import url(${aileronRegular});\n  @import url(${bigJohn});\n  @import url(${finlandRoundedThin});\n\n  :root {\n    font-size: 62.5%;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    font-size: 1.6rem;\n    font-family: 'Aileron', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <>\n      <App />\n      <GlobalStyle />\n    </>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}